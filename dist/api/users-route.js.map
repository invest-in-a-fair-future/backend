{"version":3,"sources":["../../src/api/users-route.js"],"names":["UsersRoute","logger","log4js","getLogger","addContext","router","post","req","resp","status","json","get","put"],"mappings":";;;;;;;AAGA;;;;;;;;;;AACA;IAEaA,U;;;;;;;;;gCACQ;AACjB,UAAG,CAACA,UAAU,CAACC,MAAf,EAAuB;AACrBD,QAAAA,UAAU,CAACC,MAAX,GAAoBC,gBAAOC,SAAP,EAApB;AACAH,QAAAA,UAAU,CAACC,MAAX,CAAkBG,UAAlB,CAA6B,QAA7B,EAAuC,YAAvC;AACD;;AAED,aAAOJ,UAAU,CAACC,MAAlB;AACD;;;8BAEgBI,M,EAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,MAAAA,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAsB,UAACC,GAAD,EAAMC,IAAN,EAAe;AACnCA,QAAAA,IAAI,CAACC,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AACpB,kBAAQ;AACN,qBAAS,+BADH;AAEN,oBAAQ,yBAFF;AAGN,oBAAQ,SAHF;AAIN,2BAAe,cAJT;AAKN,uBAAW,IALL;AAMN,kBAAM;AANA,WADY;AASpB,yBAAe;AACb,qBAAS,+VADI;AAEb,0BAAc;AAFD;AATK,SAAtB;AAcD,OAfD;AAiBAL,MAAAA,MAAM,CAACM,GAAP,CAAW,QAAX,EAAqB,UAACJ,GAAD,EAAMC,IAAN,EAAe;AAClCA,QAAAA,IAAI,CAACE,IAAL,CAAU;AACR,qBAAY,IADJ;AAER,yBAAgB,cAFR;AAGR,kBAAS,yBAHD;AAIR,gBAAO,sCAJC;AAKR,kBAAS,SALD;AAMR,mBAAU;AANF,SAAV;AAQD,OATD;AAWAL,MAAAA,MAAM,CAACO,GAAP,CAAW,QAAX,EAAqB,UAACL,GAAD,EAAMC,IAAN,EAAe;AAClCA,QAAAA,IAAI,CAACE,IAAL,CAAU;AACR,qBAAY,IADJ;AAER,yBAAgB,cAFR;AAGR,kBAAS,yBAHD;AAIR,gBAAO,sCAJC;AAKR,kBAAS,SALD;AAMR,mBAAU;AANF,SAAV;AAQD,OATD;AAUD","sourcesContent":["// import bcrypt from 'bcrypt';\n// import config from '../config/config';\n// import {Auth} from \"../auth\";\nimport log4js from \"log4js\";\n// import { DB } from '../DB';\n\nexport class UsersRoute {\n  static getLogger() {\n    if(!UsersRoute.logger) {\n      UsersRoute.logger = log4js.getLogger();\n      UsersRoute.logger.addContext('source', 'UsersRoute');\n    }\n\n    return UsersRoute.logger;\n  }\n\n  static configure(router) {\n    // router.post('/users', (req, resp) => {\n    //   const user = req.body;\n    //\n    //   if(!user) {\n    //     return resp.status(400).json({\n    //       'code': 'INVCRUSR01',\n    //       'message': 'No user information sent.'\n    //     });\n    //   }\n    //\n    //   if(!user.email || !user.name || !user.type || !user.password || !user.country) {\n    //     return resp.status(400).json({\n    //       'code': 'INVCRUSR02',\n    //       'message': 'Invalid or missing information.'\n    //     });\n    //   } else if(user.type !== 'company' && !user.type !== 'partner' && !user.type !== 'comminityRepresentative') {\n    //     return resp.status(400).json({\n    //       'code': 'INVCRUSR02',\n    //       'message': 'Invalid or missing information.'\n    //     });\n    //   }\n    //\n    //   user.password = bcrypt.hashSync(user.password, config.users.salt);\n    //\n    //   DB.getCollection('users')\n    //     .then(users => {\n    //       return users.findOne({email:user.email})\n    //         .then(dbUser => {\n    //           if(!dbUser) {\n    //             return users.insertOne(user);\n    //           } else {\n    //             const e = new Error('User already exists');\n    //             e.passMessage = true;\n    //             throw e;\n    //           }\n    //         });\n    //     })\n    //     .then(result => {\n    //       if(result.result.ok < 1) {\n    //         throw new Error('Unable to add user');\n    //       }\n    //       const createdUser = result.ops[0];\n    //       delete createdUser.password;\n    //       createdUser.id = createdUser._id;\n    //       delete createdUser._id;\n    //       const credentials = Auth.generateToken(createdUser);\n    //       return resp.status(201).json({\n    //         user: createdUser,\n    //         credentials: credentials\n    //       });\n    //     })\n    //     .catch(e => {\n    //       this.getLogger().error(e);\n    //       if(e.passMessage) {\n    //         return resp.status(500).json({\n    //           code: 'INVCRUSR501',\n    //           message: e.message\n    //         });\n    //\n    //       } else {\n    //         return resp.status(500).json({\n    //           code: 'INVCRUSR500',\n    //           message: 'Unable to create user.'\n    //         });\n    //       }\n    //     });\n    // });\n\n    router.post('/users', (req, resp) => {\n      resp.status(201).json({\n        \"user\": {\n          \"email\": \"john4@investinafairfuture.org\",\n          \"name\": \"Invest in a Fair Future\",\n          \"type\": \"company\",\n          \"phoneNumber\": \"+31600000000\",\n          \"country\": \"NL\",\n          \"id\": \"5c9e4a1382449723828186f3\"\n        },\n        \"credentials\": {\n          \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImpvaG40QGludmVzdGluYWZhaXJmdXR1cmUub3JnIiwibmFtZSI6IkludmVzdCBpbiBhIEZhaXIgRnV0dXJlIiwidHlwZSI6ImNvbXBhbnkiLCJwaG9uZU51bWJlciI6IiszMTYwMDAwMDAwMCIsImNvdW50cnkiOiJOTCIsImlkIjoiNWM5ZTRhMTM4MjQ0OTcyMzgyODE4NmYzIiwiaWF0IjoxNTUzODc3NTIzLCJleHAiOjE1NTY0Njk1MjN9.ORcfbjvB8iOFTF_PfJ0GC4PvwUqhn0bmmZ948z-pGjc\",\n          \"validUntil\": \"2019-04-28T15:38:43.480Z\"\n        }\n      });\n    });\n\n    router.get('/users', (req, resp) => {\n      resp.json({\n        \"country\" : \"NL\",\n        \"phoneNumber\" : \"+31600000000\",\n        \"name\" : \"Invest in a Fair Future\",\n        \"id\" : \"c447d376-6a46-4e98-89da-f86a81255503\",\n        \"type\" : \"company\",\n        \"email\" : \"john@investinafairfuture.org\"\n      });\n    });\n\n    router.put('/users', (req, resp) => {\n      resp.json({\n        \"country\" : \"NL\",\n        \"phoneNumber\" : \"+31600000000\",\n        \"name\" : \"Invest in a Fair Future\",\n        \"id\" : \"c447d376-6a46-4e98-89da-f86a81255503\",\n        \"type\" : \"company\",\n        \"email\" : \"john@investinafairfuture.org\"\n      });\n    });\n  }\n}"],"file":"users-route.js"}