{"version":3,"sources":["../src/DB.js"],"names":["DB","Promise","resolve","reject","client","user","encodeURIComponent","config","db","username","password","authMechanism","url","MongoClient","connect","e","getClient","then","name","catch","getDb","collection"],"mappings":";;;;;;;AAEA;;AACA;;;;;;;;;;IAEaA,E;;;;;;;;;gCACQ;AACjB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAG,CAACH,EAAE,CAACI,MAAP,EAAe;AAEb,cAAMC,IAAI,GAAGC,kBAAkB,CAACC,gBAAOC,EAAP,CAAUC,QAAX,CAA/B;AACA,cAAMC,QAAQ,GAAGJ,kBAAkB,CAACC,gBAAOC,EAAP,CAAUE,QAAX,CAAnC;AACA,cAAMC,aAAa,GAAG,SAAtB;AAEA,cAAMC,GAAG,uBAAgBP,IAAhB,cAAwBK,QAAxB,cAAoCH,gBAAOC,EAAP,CAAUI,GAA9C,6BAAoED,aAApE,CAAT;;AAEAE,+BAAYC,OAAZ,CAAoBF,GAApB,EAAyB,UAACG,CAAD,EAAIX,MAAJ,EAAe;AACtC,gBAAGW,CAAH,EAAM;AACJ,qBAAOZ,MAAM,CAACY,CAAD,CAAb;AACD;;AAEDf,YAAAA,EAAE,CAACI,MAAH,GAAYA,MAAZ;AACAF,YAAAA,OAAO,CAACF,EAAE,CAACI,MAAJ,CAAP;AACD,WAPD;AAQD,SAhBD,MAgBO;AACLF,UAAAA,OAAO,CAACF,EAAE,CAACI,MAAJ,CAAP;AACD;AACF,OApBM,CAAP;AAqBD;;;4BAEc;AAAA;;AACb,aAAO,IAAIH,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAA,KAAI,CAACa,SAAL,GACGC,IADH,CACQ,UAAAb,MAAM,EAAI;AACd,cAAMI,EAAE,GAAGJ,MAAM,CAACI,EAAP,CAAUD,gBAAOC,EAAP,CAAUU,IAApB,CAAX;AACAhB,UAAAA,OAAO,CAACM,EAAD,CAAP;AACD,SAJH,EAKGW,KALH,CAKShB,MALT;AAMD,OAPM,CAAP;AAQD;;;kCAEoBe,I,EAAM;AACzB,aAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCH,QAAAA,EAAE,CAACoB,KAAH,GACGH,IADH,CACQ,UAACb,MAAD,EAAY;AAChB,cAAMiB,UAAU,GAAGjB,MAAM,CAACiB,UAAP,CAAkBH,IAAlB,CAAnB;AACAhB,UAAAA,OAAO,CAACmB,UAAD,CAAP;AACD,SAJH,EAKGF,KALH,CAKShB,MALT;AAMD,OAPM,CAAP;AAQD","sourcesContent":["/* jshint esversion: 6 */\n\nimport { MongoClient } from 'mongodb';\nimport config from './config/config';\n\nexport class DB {\n  static getClient() {\n    return new Promise((resolve, reject) => {\n      if(!DB.client) {\n\n        const user = encodeURIComponent(config.db.username);\n        const password = encodeURIComponent(config.db.password);\n        const authMechanism = 'DEFAULT';\n\n        const url = `mongodb://${user}:${password}@${config.db.url}/?authMechanism=${authMechanism}`;\n\n        MongoClient.connect(url, (e, client) => {\n          if(e) {\n            return reject(e);\n          }\n\n          DB.client = client;\n          resolve(DB.client);\n        });\n      } else {\n        resolve(DB.client);\n      }\n    });\n  }\n\n  static getDb() {\n    return new Promise((resolve, reject) => {\n      this.getClient()\n        .then(client => {\n          const db = client.db(config.db.name)\n          resolve(db);\n        })\n        .catch(reject);\n    });\n  }\n\n  static getCollection(name) {\n    return new Promise((resolve, reject) => {\n      DB.getDb()\n        .then((client) => {\n          const collection = client.collection(name);\n          resolve(collection);\n        })\n        .catch(reject);\n    });\n  }\n}"],"file":"DB.js"}