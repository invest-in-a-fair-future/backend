{"version":3,"sources":["../src/server.js"],"names":["app","port","process","env","PORT","logger","log4js","getLogger","configure","config","addContext","router","express","Router","corsConfig","cors","whitelist","origin","corsOptions","callback","isWildcard","indexOf","originIsWhitelisted","isAllowed","use","bodyParser","urlencoded","extended","json","listen","info","require","EventEmitter","defaultMaxListeners"],"mappings":";;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;AANA;AAQA,IAAMA,GAAG,GAAG,uBAAZ;AAAA,IACEC,IAAI,GAAG,QAAQC,OAAO,CAACC,GAAR,CAAYC,IAD7B;AAGA,IAAMC,MAAM,GAAGC,MAAM,CAACC,SAAP,EAAf;AACAD,MAAM,CAACE,SAAP,CAAiBC,gBAAOH,MAAxB;AACAD,MAAM,CAACK,UAAP,CAAkB,QAAlB,EAA4B,KAA5B;;AAEA,IAAMC,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;AAEA,IAAMC,UAAU,GAAGL,gBAAOM,IAAP,IAAe;AAChC,YAAU,GADsB;AAEhC,aAAW,GAFqB;AAGhC,aAAW;AAHqB,CAAlC;AAMA,IAAMC,SAAS,GAAGF,UAAU,CAACG,MAA7B;AACA,IAAMC,WAAW,GAAG;AAClBD,EAAAA,MAAM,EAAE,gBAAUA,OAAV,EAAkBE,QAAlB,EAA4B;AAClC,QAAMC,UAAU,GAAGJ,SAAS,CAACK,OAAV,CAAkB,GAAlB,MAA2B,CAAC,CAA/C;AACA,QAAMC,mBAAmB,GAAGN,SAAS,CAACK,OAAV,CAAkBJ,OAAlB,MAA8B,CAAC,CAA3D;AACA,QAAMM,SAAS,GAAGH,UAAU,IAAIE,mBAAhC;AACAH,IAAAA,QAAQ,CAAC,IAAD,EAAOI,SAAP,CAAR;AACD;AANiB,CAApB;AASAvB,GAAG,CAACwB,GAAJ,CAAQ,mBAAKN,WAAL,CAAR;AACAlB,GAAG,CAACwB,GAAJ,CAAQC,oBAAWC,UAAX,CAAsB;AAC5BC,EAAAA,QAAQ,EAAE;AADkB,CAAtB,CAAR;AAGA3B,GAAG,CAACwB,GAAJ,CAAQC,oBAAWG,IAAX,EAAR;AAEA5B,GAAG,CAACwB,GAAJ,CAAQ,MAAR,EAAgBb,MAAhB;AAEAX,GAAG,CAAC6B,MAAJ,CAAW5B,IAAX,EAAiB,YAAM;AACrBI,EAAAA,MAAM,CAACyB,IAAP,0BAA8B7B,IAA9B;AACD,CAFD;AAIA8B,OAAO,CAAC,QAAD,CAAP,CAAkBC,YAAlB,CAA+BC,mBAA/B,GAAqD,CAArD","sourcesContent":["/* jshint esversion: 6 */\n\nimport express from 'express';\nimport config from './config/config';\nimport * as log4js from 'log4js';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\n\nconst app = express(),\n  port = 8001 || process.env.PORT;\n\nconst logger = log4js.getLogger();\nlog4js.configure(config.log4js);\nlogger.addContext('source', 'app');\n\nconst router = express.Router();\n\nconst corsConfig = config.cors || {\n  'origin': '*',\n  'headers': '*',\n  'methods': '*'\n};\n\nconst whitelist = corsConfig.origin;\nconst corsOptions = {\n  origin: function (origin, callback) {\n    const isWildcard = whitelist.indexOf('*') !== -1;\n    const originIsWhitelisted = whitelist.indexOf(origin) !== -1;\n    const isAllowed = isWildcard || originIsWhitelisted;\n    callback(null, isAllowed);\n  }\n};\n\napp.use(cors(corsOptions));\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\n\napp.use('/api', router);\n\napp.listen(port, () => {\n  logger.info(`App started at ${port}`);\n});\n\nrequire('events').EventEmitter.defaultMaxListeners = 0;\n"],"file":"server.js"}